import logging
import openai
import aiohttp
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TELEGRAM_TOKEN = '7646662758:AAH27KalaVNnSEM6uvRfwI_i58gwUhLK1Jg'
OPENDOTA_API = 'https://api.opendota.com/api'
OPENAI_API_KEY = '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'
openai.api_key = OPENAI_API_KEY

# --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
logging.basicConfig(level=logging.INFO)

# --- –ë–æ—Ç –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä ---
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher(bot)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ---
kb = ReplyKeyboardMarkup(resize_keyboard=True)
kb.add(KeyboardButton("üìñ –ö–∞–∫ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å?"))
kb.add(KeyboardButton("üß† –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –º–∞—Ç—á–∞"))

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
@dp.message_handler(commands=["start"])
async def start_handler(msg: types.Message):
    instructions = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–∞—Ç—á–µ–π Dota 2.\n\n"
        "üîì –ß—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–∏ –º–∞—Ç—á–∏, —Å–¥–µ–ª–∞–π –ø—Ä–æ—Ñ–∏–ª—å Dota 2 –ø—É–±–ª–∏—á–Ω—ã–º:\n"
        "Steam ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è ‚Üí –ü—É–Ω–∫—Ç '–ò–≥—Ä–∞ Dota 2' ‚Üí –ü—É–±–ª–∏—á–Ω–æ\n\n"
        "1. –ó–∞–π–¥–∏ –≤ Dota 2\n"
        "2. –ù–∞–∂–º–∏ –Ω–∞ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å (–≤–≤–µ—Ä—Ö—É)\n"
        "3. –ü–µ—Ä–µ–π–¥–∏ –≤ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n"
        "4. –í–∫–ª—é—á–∏ –≥–∞–ª–æ—á–∫—É: ¬´–°–¥–µ–ª–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø—É–±–ª–∏—á–Ω—ã–º¬ª\n\n"
        "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏: /setsteam [—Ç–≤–æ–π Steam32 ID]"
    )
    await msg.reply(instructions, reply_markup=kb)

@dp.message_handler(commands=["setsteam"])
async def set_steam_id(msg: types.Message):
    parts = msg.text.strip().split()
    if len(parts) != 2 or not parts[1].isdigit():
        await msg.reply("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: /setsteam 123456789")
        return
    steam_id = parts[1]
    await msg.reply(f"‚úÖ Steam ID —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {steam_id}\n\n–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /analyze")

@dp.message_handler(commands=["analyze"])
async def analyze_match(msg: types.Message):
    await msg.reply("üîÑ –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –º–∞—Ç—á–∞... (—ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")

@dp.message_handler(lambda msg: msg.text == "üß† –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –º–∞—Ç—á–∞")
async def analyze_button(msg: types.Message):
    await analyze_match(msg)

@dp.message_handler(lambda msg: msg.text == "üìñ –ö–∞–∫ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å?")
async def profile_help(msg: types.Message):
    instructions = (
        "üîì –ß—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–∏ –º–∞—Ç—á–∏, —Å–¥–µ–ª–∞–π –ø—Ä–æ—Ñ–∏–ª—å Dota 2 –ø—É–±–ª–∏—á–Ω—ã–º:\n\n"
        "1. –ó–∞–π–¥–∏ –≤ Dota 2\n"
        "2. –ù–∞–∂–º–∏ –Ω–∞ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å (–≤–≤–µ—Ä—Ö—É)\n"
        "3. –ü–µ—Ä–µ–π–¥–∏ –≤ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n"
        "4. –í–∫–ª—é—á–∏ –≥–∞–ª–æ—á–∫—É: ¬´–°–¥–µ–ª–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø—É–±–ª–∏—á–Ω—ã–º¬ª\n\n"
        "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏: /setsteam [—Ç–≤–æ–π Steam32 ID]"
    )
    await msg.reply(instructions)

# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
